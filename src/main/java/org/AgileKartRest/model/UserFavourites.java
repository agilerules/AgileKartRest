package org.AgileKartRest.model;

// Generated 12 Aug, 2015 11:27:47 PM by Hibernate Tools 4.3.1

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.xml.bind.annotation.XmlRootElement;

/**
 * UserFavourites generated by hbm2java
 */
@Entity
@Table(name = "user_favourites"
      , catalog = "agilekartv2")
@XmlRootElement
public class UserFavourites implements java.io.Serializable
{
	private static final long serialVersionUID = -8816027501062116750L;
private String userFavouriteId;
   private Merchant merchant;
   private Users users;
   private String favouriteId;
   private String orderFl;
   private String lastUpdateUserId;
   private Date lastUpdateTs;

   public UserFavourites()
   {
   }

   public UserFavourites(String userFavouriteId, Users users, String favouriteId)
   {
      this.userFavouriteId = userFavouriteId;
      this.users = users;
      this.favouriteId = favouriteId;
   }

   public UserFavourites(String userFavouriteId, Merchant merchant, Users users, String favouriteId, String orderFl, String lastUpdateUserId, Date lastUpdateTs)
   {
      this.userFavouriteId = userFavouriteId;
      this.merchant = merchant;
      this.users = users;
      this.favouriteId = favouriteId;
      this.orderFl = orderFl;
      this.lastUpdateUserId = lastUpdateUserId;
      this.lastUpdateTs = lastUpdateTs;
   }

   @Id
   @Column(name = "user_favourite_id", unique = true, nullable = false, length = 45)
   public String getUserFavouriteId()
   {
      return this.userFavouriteId;
   }

   public void setUserFavouriteId(String userFavouriteId)
   {
      this.userFavouriteId = userFavouriteId;
   }

   @ManyToOne(fetch = FetchType.LAZY)
   @JoinColumn(name = "merchant_id")
   public Merchant getMerchant()
   {
      return this.merchant;
   }

   public void setMerchant(Merchant merchant)
   {
      this.merchant = merchant;
   }

   @ManyToOne(fetch = FetchType.LAZY)
   @JoinColumn(name = "user_id", nullable = false)
   public Users getUsers()
   {
      return this.users;
   }

   public void setUsers(Users users)
   {
      this.users = users;
   }

   @Column(name = "favourite_id", nullable = false, length = 45)
   public String getFavouriteId()
   {
      return this.favouriteId;
   }

   public void setFavouriteId(String favouriteId)
   {
      this.favouriteId = favouriteId;
   }

   @Column(name = "order_fl", length = 45)
   public String getOrderFl()
   {
      return this.orderFl;
   }

   public void setOrderFl(String orderFl)
   {
      this.orderFl = orderFl;
   }

   @Column(name = "last_update_user_id", length = 45)
   public String getLastUpdateUserId()
   {
      return this.lastUpdateUserId;
   }

   public void setLastUpdateUserId(String lastUpdateUserId)
   {
      this.lastUpdateUserId = lastUpdateUserId;
   }

   @Temporal(TemporalType.TIMESTAMP)
   @Column(name = "last_update_ts", length = 19)
   public Date getLastUpdateTs()
   {
      return this.lastUpdateTs;
   }

   public void setLastUpdateTs(Date lastUpdateTs)
   {
      this.lastUpdateTs = lastUpdateTs;
   }

}
