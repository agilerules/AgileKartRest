package org.AgileKartRest.model;

// Generated 12 Aug, 2015 11:27:47 PM by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.xml.bind.annotation.XmlRootElement;

import org.codehaus.jackson.annotate.JsonIgnoreProperties;

/**
 * Product generated by hbm2java
 */
@Entity
@Table(name = "product"
      , catalog = "agilekartv2")
@JsonIgnoreProperties({ "productOptions","productReviews","productCategories","orderDetailses","offers"})
@XmlRootElement
public class Product implements java.io.Serializable
{
	private static final long serialVersionUID = -5604164774500795760L;
private String productId;
   private Merchant merchant;
   private String productName;
   private float productPrice;
   private float productWeight;
   private String productCartDesc;
   private String productShortDesc;
   private String productLongDesc;
   private String productThumb;
   private String productImage;
   private Float productStock;
   private Float productDiscountPercentage;
   private Boolean productUnlimited;
   private Integer productHitCount;
   private Integer productSoldCount;
   private String lastUpdateUserId;
   private Date lastUpdateTs;
   private Set<ProductOption> productOptions = new HashSet<ProductOption>(0);
   private Set<ProductReview> productReviews = new HashSet<ProductReview>(0);
   private Set<ProductCategory> productCategories = new HashSet<ProductCategory>(0);
   private Set<OrderDetails> orderDetailses = new HashSet<OrderDetails>(0);
   private Set<Offer> offers = new HashSet<Offer>(0);

   public Product()
   {
   }

   public Product(String productId, Merchant merchant, String productName, float productPrice, float productWeight, String productCartDesc, String productShortDesc, String productLongDesc, String productThumb, String productImage)
   {
      this.productId = productId;
      this.merchant = merchant;
      this.productName = productName;
      this.productPrice = productPrice;
      this.productWeight = productWeight;
      this.productCartDesc = productCartDesc;
      this.productShortDesc = productShortDesc;
      this.productLongDesc = productLongDesc;
      this.productThumb = productThumb;
      this.productImage = productImage;
   }

   public Product(String productId, Merchant merchant, String productName, float productPrice, float productWeight, String productCartDesc, String productShortDesc, String productLongDesc, String productThumb, String productImage, Float productStock, Float productDiscountPercentage, Boolean productUnlimited, Integer productHitCount, Integer productSoldCount, String lastUpdateUserId, Date lastUpdateTs, Set<ProductOption> productOptions, Set<ProductReview> productReviews, Set<ProductCategory> productCategories, Set<OrderDetails> orderDetailses, Set<Offer> offers)
   {
      this.productId = productId;
      this.merchant = merchant;
      this.productName = productName;
      this.productPrice = productPrice;
      this.productWeight = productWeight;
      this.productCartDesc = productCartDesc;
      this.productShortDesc = productShortDesc;
      this.productLongDesc = productLongDesc;
      this.productThumb = productThumb;
      this.productImage = productImage;
      this.productStock = productStock;
      this.productDiscountPercentage = productDiscountPercentage;
      this.productUnlimited = productUnlimited;
      this.productHitCount = productHitCount;
      this.productSoldCount = productSoldCount;
      this.lastUpdateUserId = lastUpdateUserId;
      this.lastUpdateTs = lastUpdateTs;
      this.productOptions = productOptions;
      this.productReviews = productReviews;
      this.productCategories = productCategories;
      this.orderDetailses = orderDetailses;
      this.offers = offers;
   }

   @Id
   @Column(name = "product_id", unique = true, nullable = false, length = 45)
   public String getProductId()
   {
      return this.productId;
   }

   public void setProductId(String productId)
   {
      this.productId = productId;
   }

   @ManyToOne(fetch = FetchType.LAZY)
   @JoinColumn(name = "merchant_id", nullable = false)
   public Merchant getMerchant()
   {
      return this.merchant;
   }

   public void setMerchant(Merchant merchant)
   {
      this.merchant = merchant;
   }

   @Column(name = "product_name", nullable = false, length = 100)
   public String getProductName()
   {
      return this.productName;
   }

   public void setProductName(String productName)
   {
      this.productName = productName;
   }

   @Column(name = "product_price", nullable = false, precision = 12, scale = 0)
   public float getProductPrice()
   {
      return this.productPrice;
   }

   public void setProductPrice(float productPrice)
   {
      this.productPrice = productPrice;
   }

   @Column(name = "product_weight", nullable = false, precision = 12, scale = 0)
   public float getProductWeight()
   {
      return this.productWeight;
   }

   public void setProductWeight(float productWeight)
   {
      this.productWeight = productWeight;
   }

   @Column(name = "product_cart_desc", nullable = false, length = 250)
   public String getProductCartDesc()
   {
      return this.productCartDesc;
   }

   public void setProductCartDesc(String productCartDesc)
   {
      this.productCartDesc = productCartDesc;
   }

   @Column(name = "product_short_desc", nullable = false, length = 1000)
   public String getProductShortDesc()
   {
      return this.productShortDesc;
   }

   public void setProductShortDesc(String productShortDesc)
   {
      this.productShortDesc = productShortDesc;
   }

   @Column(name = "product_long_desc", nullable = false, length = 4000)
   public String getProductLongDesc()
   {
      return this.productLongDesc;
   }

   public void setProductLongDesc(String productLongDesc)
   {
      this.productLongDesc = productLongDesc;
   }

   @Column(name = "product_thumb", nullable = false, length = 100)
   public String getProductThumb()
   {
      return this.productThumb;
   }

   public void setProductThumb(String productThumb)
   {
      this.productThumb = productThumb;
   }

   @Column(name = "product_image", nullable = false, length = 100)
   public String getProductImage()
   {
      return this.productImage;
   }

   public void setProductImage(String productImage)
   {
      this.productImage = productImage;
   }

   @Column(name = "product_ stock", precision = 12, scale = 0)
   public Float getProductStock()
   {
      return this.productStock;
   }

   public void setProductStock(Float productStock)
   {
      this.productStock = productStock;
   }

   @Column(name = "product_discount_percentage", precision = 12, scale = 0)
   public Float getProductDiscountPercentage()
   {
      return this.productDiscountPercentage;
   }

   public void setProductDiscountPercentage(Float productDiscountPercentage)
   {
      this.productDiscountPercentage = productDiscountPercentage;
   }

   @Column(name = "product_unlimited", columnDefinition = "BIT")
   public Boolean getProductUnlimited()
   {
      return this.productUnlimited;
   }

   public void setProductUnlimited(Boolean productUnlimited)
   {
      this.productUnlimited = productUnlimited;
   }

   @Column(name = "product_hit_count")
   public Integer getProductHitCount()
   {
      return this.productHitCount;
   }

   public void setProductHitCount(Integer productHitCount)
   {
      this.productHitCount = productHitCount;
   }

   @Column(name = "product_sold_count")
   public Integer getProductSoldCount()
   {
      return this.productSoldCount;
   }

   public void setProductSoldCount(Integer productSoldCount)
   {
      this.productSoldCount = productSoldCount;
   }

   @Column(name = "last_update_user_id", length = 45)
   public String getLastUpdateUserId()
   {
      return this.lastUpdateUserId;
   }

   public void setLastUpdateUserId(String lastUpdateUserId)
   {
      this.lastUpdateUserId = lastUpdateUserId;
   }

   @Temporal(TemporalType.TIMESTAMP)
   @Column(name = "last_update_ts", length = 19)
   public Date getLastUpdateTs()
   {
      return this.lastUpdateTs;
   }

   public void setLastUpdateTs(Date lastUpdateTs)
   {
      this.lastUpdateTs = lastUpdateTs;
   }

   @OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
   public Set<ProductOption> getProductOptions()
   {
      return this.productOptions;
   }

   public void setProductOptions(Set<ProductOption> productOptions)
   {
      this.productOptions = productOptions;
   }

   @OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
   public Set<ProductReview> getProductReviews()
   {
      return this.productReviews;
   }

   public void setProductReviews(Set<ProductReview> productReviews)
   {
      this.productReviews = productReviews;
   }

   @OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
   public Set<ProductCategory> getProductCategories()
   {
      return this.productCategories;
   }

   public void setProductCategories(Set<ProductCategory> productCategories)
   {
      this.productCategories = productCategories;
   }

   @OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
   public Set<OrderDetails> getOrderDetailses()
   {
      return this.orderDetailses;
   }

   public void setOrderDetailses(Set<OrderDetails> orderDetailses)
   {
      this.orderDetailses = orderDetailses;
   }

   @OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
   public Set<Offer> getOffers()
   {
      return this.offers;
   }

   public void setOffers(Set<Offer> offers)
   {
      this.offers = offers;
   }

}
