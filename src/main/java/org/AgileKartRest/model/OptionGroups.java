package org.AgileKartRest.model;

// Generated 12 Aug, 2015 11:27:47 PM by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;
import javax.xml.bind.annotation.XmlRootElement;

import org.codehaus.jackson.annotate.JsonIgnoreProperties;

/**
 * OptionGroups generated by hbm2java
 */
@Entity
@Table(name = "option_groups"
      , catalog = "agilekartv2"
      , uniqueConstraints = @UniqueConstraint(columnNames = "option_group_desc"))
@JsonIgnoreProperties({ "optionses","categoryOptionses","productOptions"})
@XmlRootElement
public class OptionGroups implements java.io.Serializable
{
	private static final long serialVersionUID = 4932107307653091595L;
private String optionGroupId;
   private String optionGroupName;
   private String optionGroupDesc;
   private String lastUpdateUserId;
   private Date lastUpdateTs;
   private Set<Options> optionses = new HashSet<Options>(0);
   private Set<CategoryOptions> categoryOptionses = new HashSet<CategoryOptions>(0);
   private Set<ProductOption> productOptions = new HashSet<ProductOption>(0);

   public OptionGroups()
   {
   }

   public OptionGroups(String optionGroupId, String optionGroupName, String optionGroupDesc)
   {
      this.optionGroupId = optionGroupId;
      this.optionGroupName = optionGroupName;
      this.optionGroupDesc = optionGroupDesc;
   }

   public OptionGroups(String optionGroupId, String optionGroupName, String optionGroupDesc, String lastUpdateUserId, Date lastUpdateTs, Set<Options> optionses, Set<CategoryOptions> categoryOptionses, Set<ProductOption> productOptions)
   {
      this.optionGroupId = optionGroupId;
      this.optionGroupName = optionGroupName;
      this.optionGroupDesc = optionGroupDesc;
      this.lastUpdateUserId = lastUpdateUserId;
      this.lastUpdateTs = lastUpdateTs;
      this.optionses = optionses;
      this.categoryOptionses = categoryOptionses;
      this.productOptions = productOptions;
   }

   @Id
   @Column(name = "option_group_id", unique = true, nullable = false, length = 45)
   public String getOptionGroupId()
   {
      return this.optionGroupId;
   }

   public void setOptionGroupId(String optionGroupId)
   {
      this.optionGroupId = optionGroupId;
   }

   @Column(name = "option_group_name", nullable = false, length = 50)
   public String getOptionGroupName()
   {
      return this.optionGroupName;
   }

   public void setOptionGroupName(String optionGroupName)
   {
      this.optionGroupName = optionGroupName;
   }

   @Column(name = "option_group_desc", unique = true, nullable = false, length = 45)
   public String getOptionGroupDesc()
   {
      return this.optionGroupDesc;
   }

   public void setOptionGroupDesc(String optionGroupDesc)
   {
      this.optionGroupDesc = optionGroupDesc;
   }

   @Column(name = "last_update_user_id", length = 45)
   public String getLastUpdateUserId()
   {
      return this.lastUpdateUserId;
   }

   public void setLastUpdateUserId(String lastUpdateUserId)
   {
      this.lastUpdateUserId = lastUpdateUserId;
   }

   @Temporal(TemporalType.TIMESTAMP)
   @Column(name = "last_update_ts", length = 19)
   public Date getLastUpdateTs()
   {
      return this.lastUpdateTs;
   }

   public void setLastUpdateTs(Date lastUpdateTs)
   {
      this.lastUpdateTs = lastUpdateTs;
   }

   @OneToMany(fetch = FetchType.LAZY, mappedBy = "optionGroups")
   public Set<Options> getOptionses()
   {
      return this.optionses;
   }

   public void setOptionses(Set<Options> optionses)
   {
      this.optionses = optionses;
   }

   @OneToMany(fetch = FetchType.LAZY, mappedBy = "optionGroups")
   public Set<CategoryOptions> getCategoryOptionses()
   {
      return this.categoryOptionses;
   }

   public void setCategoryOptionses(Set<CategoryOptions> categoryOptionses)
   {
      this.categoryOptionses = categoryOptionses;
   }

   @OneToMany(fetch = FetchType.LAZY, mappedBy = "optionGroups")
   public Set<ProductOption> getProductOptions()
   {
      return this.productOptions;
   }

   public void setProductOptions(Set<ProductOption> productOptions)
   {
      this.productOptions = productOptions;
   }

}
